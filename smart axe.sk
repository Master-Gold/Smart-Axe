#          Smart Axe v2.1                    Made By Master__Gold

command /smartaxe [<text>] [<text>] [<number>]:
    aliases: sa
    description: manage smart axe script. /axe help
    permission: op
    permission message: "&cYou Dont have access to this command!"
    trigger:
        if arg-1 is not set:
            send "&6[&eSmart Axe&6] &cYou're Wrong! Correct usage is /axe <name> <text>" to player
            stop
        else:
            if arg-1 is "name":
                if arg 2 is not set:
                    send "&6[&eSmart Axe&6] &cYou're Wrong! Correct usage is /axe name <text>." to player
                    stop
                else:
                    set {smartaxe::name} to arg-2
                    send "&6[&eSmart Axe&6] &2Smart Axe name was set to %{smartaxeXname}%." to player
                    stop
            if arg-1 is "regen":
                if arg-2 is not set:
                    send "&6[&eSmart Axe&6] &cYou're Wrong! Correct usage is /axe regen <true/false> <delay>." to player
                    stop
                else:
                    if arg-2 is "true":
                        if arg-3 is not set:
                            send "&6[&eSmart Axe&6] &cYou're Wrong! Correct usage is /axe regen <true/false> <delay>." to player
                            stop
                        else:
                            set {smartaxe::regen} to arg-3
                            send "&6[&eSmart Axe&6] &2Smart Axe name was set to True with %{smartaxe::regen}% Seconds delay." to player
                            stop
                    if arg-2 is "false":
                        send "&6[&eSmart Axe&6] &2Smart Axe name was set to False." to player
                        set {smartaxe::regen} to 0
                        stop
                    else:
                        send "&6[&eSmart Axe&6] &cYou're Wrong! Correct usage is /axe regen <true/false> <delay>." to player
                        stop

            if arg-1 is "help" or "Help" or "HELP":
                send "&6[&eSmart Axe&6] &aIf you Want Change the axe name try: " to player
                send "&6[&eSmart Axe&6] &7  /axe name <axe name>" to player
                send "&6[&eSmart Axe&6] &8   example /axe name &6SmartAxe" to player
                send "&6[&eSmart Axe&6] &7  /axe regen <true/false> <delay>" to player
                send "&6[&eSmart Axe&6] &8   example /axe regen true 3" to player
            else:
                send "&6[&eSmart Axe&6] &aSmart Axe v2.1 | Made by Master__Gold" to player
                send "&6[&eSmart Axe&6] &7     Try /axe help for help!         " to player
on tab complete:
    event-string is "/sa" or "/smartaxe"
    set tab completions for position 1 to "name", "regen"
    if tab arg-1 = "regen":
        set tab completions for position 2 to "true", "false"
        if tab arg-2 = "true":
            set tab completions for position 2 to "1", "3", "5", "10", "15"
on script load:
    if {smartaxe::regen} is not set:
        set {smartaxe::regen} to 0

on block break:
    if {smartaxe::name} is set:
        if player's tool's name is not {smartaxe::name}:
            stop
    if player's gamemode is not creative:
        if event-block is log:
            set {_blocks::*} to event-block
            set {_mainblock} to event-block
            loop blocks in radius 3:
                if loop-block is {_mainblock}:
                    add loop-block to {_blocks::*}
            loop {_blocks::*}:
                wait 2 ticks
                break loop-value
            if {smartaxe::regen} is not 0:
                loop {smartaxe::regen} times:
                    wait 1 second
            loop {_blocks::*}:
                wait 1 ticks
                set loop-value to {_mainblock}
